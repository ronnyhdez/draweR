{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Drawer: Where I keep my R notes (and other dev stuff) Hi! Be aware that this is not an organized place. It's just a place where I put all my R notes to look for after. If something works for you as a reference, great! Take it! Before this, all this notes where kept in my desk drawer What you can find here: Things with strings Wondering how to ask yes and no questions in R? How this site was built? This site is hosted in GitHub. Just create your repo, go to configuration and enable github pages. Then, with a bit of help of mkdocs and the material theme the site came to life. And now all my Rmarkdown fit in this site! Also, I was kind of \"obstinado\" having to repeat a couple of steps for each note that I wanted to deploy, so I created some (around 3) R functions to deal with this workflow and put everything together in a small R package that I called docmaker (Available just on GitHub) If you are new to this kind of documentation, I recommend you to check at least the package documentation, so you can find how to set-up everything to create your own site. Who am I? I'm a desk biologist who likes to play around with my computer.","title":"Drawer: Where I keep my R notes (and other dev stuff)"},{"location":"#drawer-where-i-keep-my-r-notes-and-other-dev-stuff","text":"Hi! Be aware that this is not an organized place. It's just a place where I put all my R notes to look for after. If something works for you as a reference, great! Take it! Before this, all this notes where kept in my desk drawer","title":"Drawer: Where I keep my R notes (and other dev stuff)"},{"location":"#what-you-can-find-here","text":"Things with strings Wondering how to ask yes and no questions in R?","title":"What you can find here:"},{"location":"#how-this-site-was-built","text":"This site is hosted in GitHub. Just create your repo, go to configuration and enable github pages. Then, with a bit of help of mkdocs and the material theme the site came to life. And now all my Rmarkdown fit in this site! Also, I was kind of \"obstinado\" having to repeat a couple of steps for each note that I wanted to deploy, so I created some (around 3) R functions to deal with this workflow and put everything together in a small R package that I called docmaker (Available just on GitHub) If you are new to this kind of documentation, I recommend you to check at least the package documentation, so you can find how to set-up everything to create your own site.","title":"How this site was built?"},{"location":"#who-am-i","text":"I'm a desk biologist who likes to play around with my computer.","title":"Who am I?"},{"location":"check_path/","text":"R Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com . When you click the Knit button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this: summary(cars) ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.:19.0 3rd Qu.: 56.00 ## Max. :25.0 Max. :120.00 Including Plots You can also embed plots, for example: Note that the echo = FALSE parameter was added to the code chunk to prevent printing of the R code that generated the plot. Read data check <- readr::read_csv(\"data/Untitled 1.csv\") ## Rows: 3 Columns: 3 ## \u2500\u2500 Column specification \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 ## Delimiter: \",\" ## chr (1): A ## dbl (2): B, C ## ## \u2139 Use `spec()` to retrieve the full column specification for this data. ## \u2139 Specify the column types or set `show_col_types = FALSE` to quiet this message. dplyr::glimpse(check) ## Rows: 3 ## Columns: 3 ## $ A <chr> \"sd\", \"fd\", \"er\" ## $ B <dbl> 34, 56, 87 ## $ C <dbl> 34, 23, 43","title":"Check path"},{"location":"check_path/#r-markdown","text":"This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com . When you click the Knit button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this: summary(cars) ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.:19.0 3rd Qu.: 56.00 ## Max. :25.0 Max. :120.00","title":"R Markdown"},{"location":"check_path/#including-plots","text":"You can also embed plots, for example: Note that the echo = FALSE parameter was added to the code chunk to prevent printing of the R code that generated the plot.","title":"Including Plots"},{"location":"check_path/#read-data","text":"check <- readr::read_csv(\"data/Untitled 1.csv\") ## Rows: 3 Columns: 3 ## \u2500\u2500 Column specification \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 ## Delimiter: \",\" ## chr (1): A ## dbl (2): B, C ## ## \u2139 Use `spec()` to retrieve the full column specification for this data. ## \u2139 Specify the column types or set `show_col_types = FALSE` to quiet this message. dplyr::glimpse(check) ## Rows: 3 ## Columns: 3 ## $ A <chr> \"sd\", \"fd\", \"er\" ## $ B <dbl> 34, 56, 87 ## $ C <dbl> 34, 23, 43","title":"Read data"},{"location":"questions_in_r/","text":"Create questions with yesno package If we have functions that require the confirmation of the user, we can use the yesno package to create questions and the answer options: library(yesno) publicar <- function(){ respuesta <- yesno::yesno(\"\u00bfDesea publicar las notas?\", yes = \"Estoy seguro de publicarlas\", no = \"No, es un error\", no = \"NOOO, yo no quiero publicar nada\") if (respuesta == TRUE) { print(\"Los correos han sido enviados\") } else { print(\"No se envio nada\") } } #publicar()","title":"Create questions with `yesno` package"},{"location":"questions_in_r/#create-questions-with-yesno-package","text":"If we have functions that require the confirmation of the user, we can use the yesno package to create questions and the answer options: library(yesno) publicar <- function(){ respuesta <- yesno::yesno(\"\u00bfDesea publicar las notas?\", yes = \"Estoy seguro de publicarlas\", no = \"No, es un error\", no = \"NOOO, yo no quiero publicar nada\") if (respuesta == TRUE) { print(\"Los correos han sido enviados\") } else { print(\"No se envio nada\") } } #publicar()","title":"Create questions with yesno package"},{"location":"stringr_tips/","text":"How to extract numbers from a string Sometimes, I need to extract just the numbers that I can find in a string. To achieve this, I can use the following function: library(stringr) string_with_numbers <- c(\"01 uno\", \"02 dos\") str_extract(string_with_numbers , \"\\\\d+\") ## [1] \"01\" \"02\"","title":"How to extract numbers from a string"},{"location":"stringr_tips/#how-to-extract-numbers-from-a-string","text":"Sometimes, I need to extract just the numbers that I can find in a string. To achieve this, I can use the following function: library(stringr) string_with_numbers <- c(\"01 uno\", \"02 dos\") str_extract(string_with_numbers , \"\\\\d+\") ## [1] \"01\" \"02\"","title":"How to extract numbers from a string"}]}